Once upon a time a little frog whose name was Vasya decided to travel around his home swamp. Overall there are n mounds on the swamp, located on one line. The distance between the neighboring mounds is one meter. Vasya wants to visit all the mounds in one day; besides, he wants to visit each one exactly once. For that he makes a route plan, to decide the order in which to jump on the mounds. Vasya can pick any mound as the first one. He thinks it boring to jump two times at the same distance. That's why he wants any two jumps on his route to have different lengths. Help Vasya the Frog and make the plan for him.

Solution :

/*                	SOUVIK MAJI 
               JALPAIGURI GOVT. ENGG. COLLEGE
*/
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define dd double
#define pb push_back
#define ff first
#define ss second
#define Mp make_pair
#define endl "\n"
#define SIZE 1000000
#define for(i,x,n) for(int i=x;i<=n-1;i++) 
#define rof(i,x,n) for(int i=n-1;i>=x;i--)
#define fio ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
 
ll pwr(ll n,ll p)
{
    if (p==0) 
        return 1; 
    else if (p%2==0) 
        return pwr(n,p/2)*pwr(n,p/2); 
    else
        return n*pwr(n,p/2)*pwr(n,p/2);
}
ll hcf(ll a,ll b) 
{ 
    if(b==0) 
        return a; 
    return hcf(b,a%b);  
}
ll min(ll x,ll y){if(x<y) return x;return y;}
ll max(ll x,ll y){if(x>y) return x;return y;}
 
bool f(ll x,ll y) {return x>y;}
 
int main() {
	fio;
	int n;
	cin>>n;
	int f=1;
	int x=1;
	cout<<x;
	while(--n)
	{
	   if(f==1)
	   {x+=n;
	   f=0;}
	   else
	   {x-=n;
	   f=1;}
	    cout<<" "<<x;
	}
	cout<<endl;
	
	
	return 0;
}
